{"version":3,"sources":["../../src/arnft/arnftContext.js"],"names":["React","createContext","useMemo","useContext","useEffect","useRef","useState","useCallback","useThree","ARNft","constraints","audio","video","facingMode","width","height","ARNftContext","ARNftProvider","children","interpolationFactor","gl","camera","setSize","arnft","setARNft","arnftRef","onLoaded","msg","console","log","current","navigator","mediaDevices","getUserMedia","stream","srcObject","onloadedmetadata","event","srcElement","videoWidth","videoHeight","play","domElement","style","objectFit","updateProjectionMatrix","value","useARNft","arValue"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from \"react\"\nimport { useThree } from \"@react-three/fiber\"\nimport { ARNft } from \"./arnft\"\n\nconst constraints = {\n  audio: false,\n  video: {\n    facingMode: \"environment\",\n    width: 640,\n    height: 480,\n  },\n}\n\nconst ARNftContext = createContext({})\n\nconst ARNftProvider = ({ children, video, interpolationFactor }) => {\n  const { gl, camera, setSize } = useThree()\n  const [arnft, setARNft] = useState(null)\n  const arnftRef = useRef()\n\n  const onLoaded = useCallback((msg) => {\n    console.log(\"onLoaded\", msg)\n\n    setARNft(arnftRef.current)\n  }, [])\n\n  useEffect(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints)\n    video.current.srcObject = stream\n    video.current.onloadedmetadata = async (event) => {\n      console.log(event.srcElement.videoWidth)\n      console.log(event.srcElement.videoHeight)\n\n      video.current.play()\n\n      gl.domElement.width = event.srcElement.videoWidth\n      gl.domElement.height = event.srcElement.videoHeight\n\n      gl.domElement.style.objectFit = \"cover\"\n\n      camera.updateProjectionMatrix()\n\n      const arnft = new ARNft(\n        \"../data/camera_para.dat\",\n        video.current,\n        gl,\n        camera,\n        onLoaded,\n        interpolationFactor,\n      )\n\n      arnftRef.current = arnft\n    }\n  }, [])\n\n  const value = useMemo(() => {\n    return { arnft: arnft }\n  }, [arnft])\n\n  return <ARNftContext.Provider value={value}>{children}</ARNftContext.Provider>\n}\n\nconst useARNft = () => {\n  const arValue = useContext(ARNftContext)\n  return useMemo(() => ({ ...arValue }), [arValue])\n}\n\nexport { ARNftProvider, useARNft, ARNftContext }\n"],"file":"arnftContext.js"}